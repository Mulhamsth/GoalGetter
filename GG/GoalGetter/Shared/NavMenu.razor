@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager
<MudNavMenu>
    <AuthorizeView Roles="Administrator, User">
    <Authorized>
        <MudNavLink Href="/" Match="NavLinkMatch.All">Projects</MudNavLink>
        <MudNavLink Href="/people" Match="NavLinkMatch.Prefix">People</MudNavLink>
        <MudNavLink OnClick="Logout" Match="NavLinkMatch.Prefix">Logout</MudNavLink>
    </Authorized>
    <NotAuthorized>
        <MudNavLink Href="/login" Match="NavLinkMatch.Prefix">Login</MudNavLink>
    </NotAuthorized>
</AuthorizeView>
</MudNavMenu>


@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/", true);
    }
}
