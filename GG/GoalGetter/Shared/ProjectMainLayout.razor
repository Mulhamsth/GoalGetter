@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<PageTitle>GoalGetter</PageTitle>

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <!-- Leiste oben - Background: #0088d3 -->
    <MudAppBar Elevation="0" Style="background-color: #0088d3">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <div style="display: flex; justify-content: flex-end; align-items: center; flex-grow: 1;">
            <MudImage Src="images/logo-goalgetter.png" Width="50" Height="50" Alt="GG-Logo" Style="border: none;" />
        </div>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">
                <a @onclick="GoToRootPage" style="cursor: pointer; text-decoration: none;">GoalGetter</a>
            </MudText>
        </MudDrawerHeader>
        <ProjectNavMenu ProId="@ID" />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-5 pt-5">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    public string ID { get; set; }

    protected override void OnParametersSet()
    {
        // pull out the "ID" parameter from the route data
        object id = null;
        if ((this.Body.Target as RouteView)?.RouteData.RouteValues?.TryGetValue("ID", out id) == true)
        {
            ID = id?.ToString();
        }
    }

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void GoToRootPage()
    {
        NavigationManager.NavigateTo("/");
    }
}
