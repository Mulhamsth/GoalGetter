@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager
<MudNavMenu>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="@DashboardLinkHref" Match="NavLinkMatch.All">Dashboard</MudNavLink>
            <MudNavLink Href="@TeamLinkHref" Match="NavLinkMatch.Prefix">Team</MudNavLink>
            <MudNavLink Href="@TasksLinkHref" Match="NavLinkMatch.Prefix">Tasks</MudNavLink>
        </Authorized>
       <NotAuthorized>
        <MudNavLink Href="/login" Match="NavLinkMatch.Prefix">Login</MudNavLink>
    </NotAuthorized>
    </AuthorizeView>
</MudNavMenu>



@code {

    [Parameter]
    public string ProId { get; set; }

    private string DashboardLinkHref => $"/project/{ProId}";

    private string TeamLinkHref => DashboardLinkHref + "/team";

    private string TasksLinkHref => DashboardLinkHref + "/tasks";

    protected override void OnInitialized()
    {
        string[] bla = NavigationManager.Uri.Split('/');
        ProId = bla[Array.FindIndex(bla, w => w == "project") + 1];
    }
    private async Task Logout()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/", true);
    }
}
