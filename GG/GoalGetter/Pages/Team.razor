@page "/project/{proid:int}/team"
@layout ProjectMainLayout
@inject NavigationManager NavigationManager
@inject IViewTeamMembersByProjectIdUseCase viewTeamMembersByProjectIdUseCase

<AuthorizeView>
	<Authorized>
		@inject IDialogService DialogService

		<div class="container-fluid">
			<div class="row">
				<div class="col-md-6 d-flex align-items-center">
					<MudButton Variant="Variant.Filled" DisableElevation="true" Style="background-color: #0088d3; color: white" Color="Color.Primary" OnClick="@((e) => OpenDialog(maxWidth))">
						+ Person
					</MudButton>
					<Searchbar OnSearchterm="OnTermSearch" />
				</div>
			</div>
		</div>

		@*@*Hier kommen die Karten für jeder Projekt*@
		<TeamListComponent proid="@proid" searchTerm="@searchterm" reloadFlag="@reloadFlag" />
	</Authorized>
	<NotAuthorized>
		<NotAuthorizedMudCard />
	</NotAuthorized>
</AuthorizeView>

@code {
	[Parameter]
	public int proid { get; set; }

	private bool reloadFlag = false;

	private List<GG.CoreBusiness.Teammember> team;

	DialogOptions maxWidth = new DialogOptions() { MaxWidth = MaxWidth.Large, FullWidth = true };

	private void OpenDialog(DialogOptions options)
	{
		var parameter = new DialogParameters { ["ProId"] = proid };
		parameter.Add("OnTeammmemberAdded", HandleTeammemberAdded);
		DialogService.ShowAsync<AddTeam>("Add People", parameter, options);
	}

	private string searchterm = "";

	private void OnTermSearch(string searchterm)
	{
		this.searchterm = searchterm;
	}

	private void HandleTeammemberAdded()
	{
		reloadFlag = !reloadFlag;
		searchterm = ""; // Optionally, clear the search term to display all projects after adding
		StateHasChanged();
	}

}