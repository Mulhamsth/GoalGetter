@page "/project/{proid:int}/team"
@layout ProjectMainLayout
@inject IViewTeamMembersByProjectIdUseCase viewTeamMembersByProjectIdUseCase
<h3>Team for project @proid</h3>

@inject IDialogService DialogService

@*<div class="container-fluid">
	<div class="row">
		<div class="col-md-6 d-flex align-items-center">
			<MudButton Variant="Variant.Filled" DisableElevation="true" Style="background-color: #0088d3; color: white" Color="Color.Primary" OnClick="@((e) => OpenDialog(maxWidth))">
				+ Person
			</MudButton>
			<MudPopover Open="@_isOpen" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
					<AddPerson Windowclosed="Close" />
			</MudPopover>
			<Searchbar OnSearchterm="OnTermSearch" />
		</div>
	</div>
</div>
*@
@*@*Hier kommen die Karten für jeder Projekt*@
@*<PeopleListComponent searchTerm="@searchterm" reloadFlag="@reloadFlag" />*@

@code {
	[Parameter]
	public int proid { get; set; }

    private bool _hidePosition;
    private bool _loading;

    private List<GG.CoreBusiness.Teammember> team;

	private string searchterm = "";

	private void OnTermSearch(string searchterm)
	{
		this.searchterm = searchterm;
	}

    protected override async Task OnInitializedAsync()
    {
        team = (await viewTeamMembersByProjectIdUseCase.ExecuteAsync(" ", proid)).ToList();
    }
}