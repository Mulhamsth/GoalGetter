@inject NavigationManager NavigationManager
@inject IAddProjectUseCase AddProjectUseCase

<MudDialog>
	<DialogContent>
		<EditForm Model="newProject" OnValidSubmit="SaveProject">
			<DataAnnotationsValidator></DataAnnotationsValidator>
			<ValidationSummary></ValidationSummary>
			<div class="form-group">
				<label for="name">Project Name</label>
				<MudInput id="name" @bind-Value="newProject.Name" class="form-control"></MudInput>
			</div>

			<div class="form-group">
				<label for="description">Description</label>
				<MudTextField id="description" @bind-Value="newProject.Description" class="form-control"></MudTextField>
			</div>
			<br/>
		<MudButton ButtonType="ButtonType.Submit" class="btn btn-primary">Save</MudButton>
		<MudButton ButtonType="ButtonType.Button" class="btn btn-primary" @onclick="Cancel">Cancel</MudButton>

		</EditForm>
	</DialogContent>
</MudDialog>


@code {
	private Project newProject = new Project();

	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	private async Task SaveProject()
	{
		newProject.assignedTeam = new Team();
		await AddProjectUseCase.ExecuteAsync(newProject);
		MudDialog.Close(DialogResult.Ok(true));
	}

	void Cancel() => MudDialog.Cancel();
}


